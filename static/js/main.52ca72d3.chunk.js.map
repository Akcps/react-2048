{"version":3,"sources":["component/Score.js","component/Result.js","component/Square.js","component/Grid.js","component/Container.js","App.js","serviceWorker.js","index.js"],"names":["Score","props","className","score","Result","result","Square","value","Grid","Squares","i","values","length","square","key","push","Container","gridValues","App","useState","setGridValues","setScore","setResult","a","moveRight","combineRow","newValues","newScore","checkForWin","generate","console","log","moveLeft","moveUp","combineColumn","moveDown","newGridValues","totalOne","totalTwo","totalThree","totalFour","row","parseInt","filteredRow","filter","num","missing","zeros","Array","fill","newRow","concat","width","column","filteredColumn","newColumn","combinedTotal","randomNumber","Math","floor","random","checkForGameOver","document","removeEventListener","useEffect","keyPress","event","keyCode","keyLeft","keyUp","keyRight","keyDown","window","addEventListener","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.52ca72d3.chunk.js","sourcesContent":["import React from \"react\"\n\n\nfunction Score (props) {\n    return (\n        <div className=\"score-container\">\n            <div>score</div>\n            <span>{props.score}</span>\n        </div>\n    )\n}\n\n\nexport default Score","import React from \"react\"\n\n\nfunction Result (props) {\n    return (\n        <div className=\"result\">\n            Result: {props.result}\n        </div>\n    )\n}\n\n\nexport default Result","import React from \"react\"\n\n\nfunction Square (props) {\n    return (\n        <div>\n            {props.value}\n        </div>\n    )\n}\n\n\nexport default Square","import React from \"react\"\nimport Square from \"./Square\"\n\n\nfunction Grid (props) {\n\n    let Squares = []\n    for (let i = 0; i < props.values.length; i++) {\n        let square = <Square key={i} value={props.values[i]}/>\n        Squares.push(square)\n    }\n\n    return (\n        <div className=\"grid\">\n            {Squares}\n        </div>\n    )\n}\n\n\nexport default Grid","import React from \"react\"\nimport Score from \"./Score\"\nimport Result from \"./Result\"\nimport Grid from \"./Grid\"\n\n\nfunction Container (props) {\n\n    return (\n        <div className=\"container\">\n            <div className=\"container-header\">\n                <h1>2048</h1>\n                <Score score={props.score}/>\n            </div>\n            <Result result={props.result}/>\n            <Grid values={props.gridValues}/>\n        </div>\n    )\n}\n\n\nexport default Container","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Container from \"./component/Container\"\n\nfunction App() {\n  const [gridValues, setGridValues] = useState([0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n  const [score, setScore] = useState(0)\n  const [result, setResult] = useState(\"\")\n\n  const width = 4\n\n  useEffect(() => {\n    const keyPress = (event) => {\n      console.log (\"Key pressed\")\n      console.log (event.keyCode)\n      if(event.keyCode === 37) {\n        keyLeft()\n      } else if (event.keyCode === 38) {\n        keyUp()\n      } else if (event.keyCode === 39) {\n        keyRight()\n      } else if (event.keyCode === 40) {\n        keyDown()\n      }\n    };\n    window.addEventListener('keydown', keyPress);\n\n    return () => {\n      window.removeEventListener('keydown', keyPress);\n    };\n  }, [gridValues, score])\n\n\n  async function keyRight() {\n    let values = await moveRight(gridValues)\n    let [newValues, newScore] = await combineRow(values, score)\n    await checkForWin(newValues)\n    newValues = await moveRight(newValues)\n    newValues = await generate(newValues)\n    setGridValues(newValues)\n    console.log(\"Latest score \", newScore)\n    setScore(newScore)\n  }\n\n  async function keyLeft() {\n    let values = await moveLeft(gridValues)\n    let [newValues, newScore] = await combineRow(values, score)\n    await checkForWin(newValues)\n    newValues = await moveLeft(newValues)\n    newValues = await generate(newValues)\n    setGridValues(newValues)\n    console.log(\"Latest score \", newScore)\n    setScore(newScore)\n  }\n\n  async function keyUp() {\n    let values = await moveUp(gridValues)\n    let [newValues, newScore] = await combineColumn(values, score)\n    await checkForWin(newValues)\n    newValues = await moveUp(newValues)\n    newValues = await generate(newValues)\n    setGridValues(newValues)\n    console.log(\"Latest score \", newScore)\n    setScore(newScore)\n  }\n\n  async function keyDown() {\n    let values = await moveDown(gridValues)\n    let [newValues, newScore] = await combineColumn(values, score)\n    await checkForWin(newValues)\n    newValues = await moveDown(newValues)\n    newValues = await generate(newValues)\n    setGridValues(newValues)\n    console.log(\"Latest score \", newScore)\n    setScore(newScore)\n  }\n\n  async function moveRight(gridValues) {\n    console.log(\"Move Right\")\n    let newGridValues = [...gridValues]\n    for (let i=0; i < gridValues.length; i++) {\n      if (i % 4 === 0) {\n        let totalOne = gridValues[i]\n        let totalTwo = gridValues[i+1]\n        let totalThree = gridValues[i+2]\n        let totalFour = gridValues[i+3]\n        let row = [parseInt(totalOne), parseInt(totalTwo), parseInt(totalThree), parseInt(totalFour)]\n\n        let filteredRow = row.filter(num => num)\n        let missing = 4 - filteredRow.length\n        let zeros = Array(missing).fill(0)\n        let newRow = zeros.concat(filteredRow)\n\n        newGridValues[i] = newRow[0]\n        newGridValues[i + 1] = newRow[1]\n        newGridValues[i + 2] = newRow[2]\n        newGridValues[i + 3] = newRow[3]\n        console.log(\"NEW ROW \", newRow)\n      }\n    }\n    console.log(\"Done Move Right\")\n    console.log(newGridValues)\n    return newGridValues\n  }\n\n  async function moveLeft() {\n    console.log(\"Move Left\")\n    let newGridValues = [...gridValues]\n    for (let i=0; i < gridValues.length; i++) {\n      if (i % 4 === 0) {\n        let totalOne = gridValues[i]\n        let totalTwo = gridValues[i+1]\n        let totalThree = gridValues[i+2]\n        let totalFour = gridValues[i+3]\n        let row = [parseInt(totalOne), parseInt(totalTwo), parseInt(totalThree), parseInt(totalFour)]\n\n        let filteredRow = row.filter(num => num)\n        let missing = 4 - filteredRow.length\n        let zeros = Array(missing).fill(0)\n        let newRow = filteredRow.concat(zeros)\n\n        newGridValues[i] = newRow[0]\n        newGridValues[i + 1] = newRow[1]\n        newGridValues[i + 2] = newRow[2]\n        newGridValues[i + 3] = newRow[3]\n        console.log(\"NEW ROW \", newRow)\n      }\n    }\n    console.log(\"Done Move Left\")\n    console.log(newGridValues)\n    return newGridValues\n  }\n\n  async function moveUp(gridValues) {\n    console.log(\"Move up\")\n    let newGridValues = [...gridValues]\n    for (let i=0; i < width; i++) {\n      \n      let totalOne = gridValues[i]\n      let totalTwo = gridValues[i+(width*1)]\n      let totalThree = gridValues[i+(width*2)]\n      let totalFour = gridValues[i+(width*3)]\n      let column = [parseInt(totalOne), parseInt(totalTwo), parseInt(totalThree), parseInt(totalFour)]\n\n      let filteredColumn = column.filter(num => num)\n      let missing = 4 - filteredColumn.length\n      let zeros = Array(missing).fill(0)\n      let newColumn = filteredColumn.concat(zeros)\n\n      newGridValues[i] = newColumn[0]\n      newGridValues[i+(width*1)] = newColumn[1]\n      newGridValues[i+(width*2)] = newColumn[2]\n      newGridValues[i+(width*3)] = newColumn[3]\n      console.log(\"NEW COLUMN \", newColumn)\n      \n    }\n    console.log(\"Done Move up\")\n    console.log(newGridValues)\n    return newGridValues\n  }\n\n  async function moveDown(gridValues) {\n    console.log(\"Move down\")\n    let newGridValues = [...gridValues]\n\n    for (let i=0; i < width; i++) {\n      \n      let totalOne = gridValues[i]\n      let totalTwo = gridValues[i+(width*1)]\n      let totalThree = gridValues[i+(width*2)]\n      let totalFour = gridValues[i+(width*3)]\n      let column = [parseInt(totalOne), parseInt(totalTwo), parseInt(totalThree), parseInt(totalFour)]\n\n      let filteredColumn = column.filter(num => num)\n      let missing = 4 - filteredColumn.length\n      let zeros = Array(missing).fill(0)\n      let newColumn = zeros.concat(filteredColumn)\n\n      newGridValues[i] = newColumn[0]\n      newGridValues[i+(width*1)] = newColumn[1]\n      newGridValues[i+(width*2)] = newColumn[2]\n      newGridValues[i+(width*3)] = newColumn[3]\n      console.log(\"NEW COLUMN \", newColumn)\n      \n    }\n    console.log(\"Done Move down\")\n    console.log(newGridValues)\n    return newGridValues\n  }\n\n  async function combineRow(gridValues, score) {\n    console.log(\"Combine Row\")\n    let newGridValues = [...gridValues]\n    let newScore = score\n    for (let i = 0; i < gridValues.length - 1; i++) {\n      if (gridValues[i] === gridValues[i + 1]) {\n        let combinedTotal = parseInt(gridValues[i]) + parseInt(gridValues[i + 1])\n        newGridValues[i] = combinedTotal\n        newGridValues[i + 1] = 0\n        console.log(\"Old Score \", newScore)\n        newScore += combinedTotal\n        console.log(\"New Score\", newScore)\n      }\n    }\n    console.log(\"Done Combine Row\")\n    console.log(newGridValues)\n    return [newGridValues, newScore]\n  }\n\n  async function combineColumn(gridValues, score) {\n    console.log(\"Combine Column\")\n    console.log(gridValues)\n    let newGridValues = [...gridValues]\n    let newScore = score\n    for (let i = 0; i < 12; i++) {\n      if (gridValues[i] === gridValues[i +width]) {\n        let combinedTotal = parseInt(gridValues[i]) + parseInt(gridValues[i + width])\n        newGridValues[i] = combinedTotal\n        newGridValues[i + 1] = 0\n        console.log(\"Old Score \", newScore)\n        newScore += combinedTotal\n        console.log(\"New Score\", newScore)\n      }\n    }\n    console.log(\"Done Combine Column\")\n    console.log(newGridValues)\n    return [newGridValues, newScore]\n  }\n\n\n\n  async function generate(gridValues) {\n      console.log(\"Generate \")\n      let newGridValues = [...gridValues]\n      let randomNumber = Math.floor(Math.random() * gridValues.length)\n      console.log(\"Random Number\", randomNumber)\n      let gameOver = checkForGameOver()\n      if (!gameOver) {\n        if (gridValues[randomNumber] === 0) {\n          newGridValues[randomNumber] = 2\n        } else {\n          return generate(gridValues)\n        }\n      } else {\n        setGridValues(gridValues)\n        console.log(\"Game already over\")\n      }\n      console.log(\"Returning from Generate \")\n      console.log(newGridValues)\n      return newGridValues\n  }\n\n  async function checkForWin() {\n    console.log(\"checkForWin \")\n    for (let i = 0; i < gridValues.length; i++) {\n      if (gridValues[i] === 2048) {\n        setResult('You WIN')\n        console.log('You WON')\n        document.removeEventListener('keydown', useEffect)\n      }\n    }\n    console.log(\"Returning from check for win \")\n  }\n\n  function checkForGameOver() {\n    let zeros = 0\n    for (let i=0; i < gridValues.length; i++) {\n      if (gridValues[i] === 0) {\n        zeros++\n      }\n    }\n    if (zeros === 0) {\n      setResult('You LOSE')\n      console.log('You LOOOOOOOOST')\n      document.removeEventListener('keydown', useEffect)\n      return true\n    }\n    return false\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Container gridValues={gridValues} score={score} result={result}/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}